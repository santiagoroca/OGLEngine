scene {

    light -> type=@DIRECTIONAL, direction=vec3(0.5, 0.5, 0.5)
    light -> type=@AMBIENT, color=0x111111

    camera {
        projection -> fov=45.0, near=0.1, far=1000.0

        transform {
            translate -> z=-25.0
        }

        on -> type=@DRAG, btn=@BUTTON0, hndl=(rotate -> x=(.delta_y * -1), y=.delta_x)
        on -> type=@DRAG, btn=@BUTTON2, hndl=(translate -> x=(.delta_x * 4), y=(.delta_y * 4))
        on -> type=@MOUSEWHEEL, hndl=(translate -> z=.delta_z)
    }

    geometry {
        source -> src='./models/earth.obj'
        texture -> src='./models/Earth_TEXTURE_CM.png'

        transform {
            translate -> space=@WORLD, z=-15.0
        }
    }

    geometry {
        source -> src='./models/earth.obj'
        texture -> src='./models/2k_sun.jpg'
    }

    ## SHADER
    # Add color to directional_light
    # Add point light
    # Add alha to ambien light (?)

    ## TRANSFORMATION
    # Create Geometries batches that share transform
    # Add scale trasnformation
    # Add transformations relatives to object

    ## EVENTS
    # Check on keypress method to filter only alphanumeric keys
    
    ## STRUCTURES
    # Create abstract geometries
    # Try to unify all entities and all methods, make diferentiation in Javascript, not parser
    # Add alternative alpha to alphanumeric, to allow 0xFF 0xFFFF 0xFFFFFF 0xFFFFFF 0xFFF 0xFFFF
    # Add elliptic function
    # Add sin function
    # Add cos function

    ## SOURCES
    # Check how to split your code in different files
    # Put geometries in binary files stored as assets

    ## PERFORMANCE
    # Implement dirty pattern in render function and update function

    # EXEC
    # Create hierarchy when building dist folder
    # Delete all sources from dist folder before building again
    
}