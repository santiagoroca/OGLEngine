scene {

    camera {

        # TODO - Far plane might not be working properly
        projection -> fov=60.0, near=1.0, far=10.0

        # TODO - Transform is not working properly
        # Check what happen with transformations
        transform {
            translate -> z=-5.0
            rotate -> axis=@UP, amnt=160deg
        }

    }

    geometry {

        # Picks the loader automatically, based on the extension
        source -> src='./models/cube.json'

        # Color can be defined in so many pretty ways
        color -> r=1.0, g=0.0, b=0.9

        transform {
            scale -> x=0.5, y=0.5, z=0.5
        }

        # Event Handlers
        on -> type=@DRAG, btn=@BUTTON0, hndl=(translate -> x=.delta_x)
        on -> type=@DRAG, btn=@BUTTON2, hndl=(translate -> y=.delta_x)
        on -> type=@INTERVAL, every=16.0, hndl=(rotate -> axis=@UP, amnt=1deg)
        on -> type=@INTERVAL, every=16.0, hndl=(rotate -> axis=@RIGHT, amnt=2deg)
        on -> type=@INTERVAL, every=16.0, hndl=(rotate -> axis=@BACK, amnt=3deg)
    }

    # Add events to the scene
    # Check what happen with transformations
    # Try to unify all entities and all methods, make diferentiation in JAvascript, not parser
    # Add parameter to transformation to allow to transform based on world transformations
    # Create abstract geometries
    # Create Geometries batches that share transform
    # Check how to load geometries from different programs
    # Check how to split your code in different files
    # Check what about routes and external assets
    # Implement dirty pattern in render function and update function
    # Check on keypress method to filter only alphanumeric keys
    # Use dictionary for all key events, all mouse events maybe
    

}