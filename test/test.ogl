scene {

    add camera {
        set fov=20.0
        set near=0.1
        set far=1000.0

        # This will ovewrite the model transform and add this new 
        # listener
        set transform {

            set model {
                on -> type=ogl.DRAG, btn=ogl.BUTTON0, hndl=(
                    rotate -> x=(.delta_y * -1), y=.delta_x
                )
            }

            set world {
                on -> type=ogl.MOUSEWHEEL, hndl=(
                    translate -> z=.delta_z
                )
                
                on -> type=ogl.DRAG, btn=ogl.BUTTON2, hndl=(
                    translate -> x=(.delta_x * 4), y=(.delta_y * 4)
                )
            }

        }
    }

    # Ambient Light
    add light {
        set type=ogl.AMBIENT
        set color=0x444444
    }

    # Directional Light
    add light {
        set type=ogl.DIRECTIONAL
        set direction=vec3(0.5, 0.5, 0.5)
    }

    # Mercury
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set world {
                translate -> z=2.0
                on -> type=ogl.INTERVAL, hndl=(rotate -> y=-0.0245deg)
            }

            set model {
                scale -> size=0.00359
            }
        }
    }

    # Venus
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set world {
                translate -> z=3.625
                on -> type=ogl.INTERVAL, hndl=(rotate -> y=-0.0096deg)
            }

            set model {
                scale -> size=0.00862
            }
        }
    }

    # Earth
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set model {
                scale -> size=0.00933
            }

            set world {
                translate -> z=6.0
                on -> type=ogl.INTERVAL, hndl=(rotate -> y=-0.006deg)
            }
        }
    }

    # Mars
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set world {
                translate -> z=7.62
                on -> type=ogl.INTERVAL, hndl=(rotate -> y=-0.0031deg)
            }

            set model {
                scale -> size=0.00502
            }
        }
    }

    # Jupiter
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set world {
                translate -> z=26.0
                on -> type=ogl.INTERVAL, hndl=(rotate -> y=-0.0005129deg)
            }

            set model {
                scale -> size=0.102729
            }
            
        }   
    }

    # Saturn
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set model {
                scale -> size=0.089798
            }

            set world {
                translate -> z=48.0
                on -> type=ogl.INTERVAL, hndl=(rotate -> y=-0.00325deg)
            }
        }
    }

    # Uranus
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set model {
                scale -> size=0.036637
            }

            set world {
                translate -> z=96.0
                on -> type=ogl.INTERVAL, key='a', hndl=(rotate -> y=-0.0007142deg)
            }
        }
    }

    # Neptune
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set model {
                scale -> size=0.035919
            }

            set world {
                translate -> z=150.5
                on -> type=ogl.INTERVAL, key='a', hndl=(rotate -> y=-0.000001245deg)
            }
        }
    }

    # Pluto
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set model {
                scale -> size=0.001652
            }

            set world {
                translate -> z=197.5
                on -> type=ogl.INTERVAL, key='a', hndl=(rotate -> y=-0.00002112)
            }
        }
    }

    add geometry {
        set source='./models/earth.obj'
        set texture='./models/2k_sun.jpg'

        set transform {
            set world {
                on -> type=ogl.INTERVAL, key='a', hndl=(rotate -> y=0.089deg)
            }
        }
    }

    ## SHADER
    # Add color to directional_light
    # Add point light
    # Add alha to ambien light (?)

    # Cameras
    # Multiple Cameras
    # Switch Camera

    ## TRANSFORMATION
    # Create Geometries batches that share transform
    # Add transformations relatives to object

    ## EVENTS
    # Check on keypress method to filter only alphanumeric keys
    
    ## STRUCTURES
    # Create abstract geometries
    # Try to unify all entities and all methods, make diferentiation in Javascript, not parser
    # Add alternative alpha to alphanumeric, to allow 0xFF 0xFFFF 0xFFFFFF 0xFFFFFF 0xFFF 0xFFFF
    # Add elliptic function
    # Add sin function
    # Add cos function

    ## SOURCES
    # Check how to split your code in different files
    # Put geometries in binary files stored as assets

    ## PERFORMANCE
    # Implement dirty pattern in render function and update function

    # EXEC
    # Create hierarchy when building dist folder
    # Delete all sources from dist folder before building again
    
}