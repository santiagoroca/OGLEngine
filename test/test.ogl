scene {

    add camera {
        set fov=20.0
        set near=0.1
        set far=1000.0

        # This will ovewrite the model transform and add this new 
        # listener
        set transform {

            set world {
                translate -> z=-25.0
            }

        }
    }

    add light {
        set type=ogl.POINT
        set position=vec3(0.0, 0.0, 0.0)
    }

    add light {
        set type=ogl.AMBIENT
        set color=0x111111
    }

    # Venus
    add geometry {
        set source='./models/earth.obj'
        set texture='./models/Earth_TEXTURE_CM.png'

        set transform {
            set model {
                scale -> size=1.0
            }
        }

        #on -> type=@INTERVAL, every=@FRAME, hndl=(rotate -> y=0deg)
        #on -> type=@INTERVAL, hndl=(rotate -> y=-0.0096deg, space=@WORLD)
    }

    ## SHADER
    # Add color to directional_light
    # Add point light
    # Add alha to ambien light (?)

    # Cameras
    # Multiple Cameras
    # Switch Camera

    ## TRANSFORMATION
    # Create Geometries batches that share transform
    # Add transformations relatives to object

    ## EVENTS
    # Check on keypress method to filter only alphanumeric keys
    
    ## STRUCTURES
    # Create abstract geometries
    # Try to unify all entities and all methods, make diferentiation in Javascript, not parser
    # Add alternative alpha to alphanumeric, to allow 0xFF 0xFFFF 0xFFFFFF 0xFFFFFF 0xFFF 0xFFFF
    # Add elliptic function
    # Add sin function
    # Add cos function

    ## SOURCES
    # Check how to split your code in different files
    # Put geometries in binary files stored as assets

    ## PERFORMANCE
    # Implement dirty pattern in render function and update function

    # EXEC
    # Create hierarchy when building dist folder
    # Delete all sources from dist folder before building again
    
}